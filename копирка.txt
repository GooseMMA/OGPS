using System;
using System.IO;
using System.Net.Http;
using System.Text.Json;
using System.Windows;
using System.IO.Compression;
using IWshRuntimeLibrary;

namespace GameLauncher
{
    public partial class MainWindow : Window
    {
        private string configPath = "config.json";
        private LauncherConfig config;

        private string githubModsFolder = "https://raw.githubusercontent.com/GooseMMA/OGPS/main/Mods/";

        public MainWindow()
        {
            InitializeComponent();
            LoadConfig();
            LoadNews();
            CheckGameStatus();
        }

        private void LoadConfig()
        {
            if (File.Exists(configPath))
            {
                string json = File.ReadAllText(configPath);
                config = JsonSerializer.Deserialize<LauncherConfig>(json);
            }
            else
            {
                config = new LauncherConfig
                {
                    gamePath = "",
                    launcherPath = Path.Combine(Environment.CurrentDirectory, "OGPSLauncher.exe"),
                    modsFolder = ""
                };
            }
        }

        private void SaveConfig()
        {
            string json = JsonSerializer.Serialize(config, new JsonSerializerOptions { WriteIndented = true });
            File.WriteAllText(configPath, json);
        }

        private void LoadNews()
        {
            // Подгружаем новости из GitHub (папка Launcher/News)
            try
            {
                using HttpClient client = new HttpClient();
                var newsUrls = new string[]
                {
                    "https://raw.githubusercontent.com/GooseMMA/OGPS/main/Launcher/News/news1.txt",
                    "https://raw.githubusercontent.com/GooseMMA/OGPS/main/Launcher/News/news2.txt"
                };

                foreach (var url in newsUrls)
                {
                    var text = client.GetStringAsync(url).Result;
                    NewsList.Items.Add(text);
                }
            }
            catch { NewsList.Items.Add("Failed to load news"); }
        }

        private void CheckGameStatus()
        {
            // Проверяем существует ли игра
            if (!string.IsNullOrEmpty(config.gamePath) && File.Exists(config.gamePath))
            {
                ActionButton.Content = "Play";
            }
            else
            {
                ActionButton.Content = "Download";
            }
        }

        private async void ActionButton_Click(object sender, RoutedEventArgs e)
        {
            if ((string)ActionButton.Content == "Download")
            {
                // Распаковываем встроенный zip
                string folder = SelectFolder();
                if (folder == null) return;

                string zipPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "OGPS.zip");
                ZipFile.ExtractToDirectory(zipPath, folder);

                config.gamePath = Path.Combine(folder, "PixelWorlds.exe");
                config.modsFolder = Path.Combine(folder, "PixelWorlds", "Mods");
                SaveConfig();

                CreateShortcut(config.launcherPath);
                ActionButton.Content = "Play";
            }
            else if ((string)ActionButton.Content == "Play")
            {
                // Проверяем DLL
                await UpdateMods();
                System.Diagnostics.Process.Start(config.gamePath);
            }
        }

        private string SelectFolder()
        {
            // Используем стандартное диалоговое окно
            var dlg = new System.Windows.Forms.FolderBrowserDialog();
            System.Windows.Forms.DialogResult result = dlg.ShowDialog();
            if (result == System.Windows.Forms.DialogResult.OK)
                return dlg.SelectedPath;
            return null;
        }

        private async System.Threading.Tasks.Task UpdateMods()
        {
            Directory.CreateDirectory(config.modsFolder);
            string[] mods = { "OG_addons.dll" }; // Для примера, можно динамически из GitHub API

            using HttpClient client = new HttpClient();
            foreach (var mod in mods)
            {
                var url = githubModsFolder + mod;
                var bytes = await client.GetByteArrayAsync(url);
                File.WriteAllBytes(Path.Combine(config.modsFolder, mod), bytes);
            }
        }

        private void CreateShortcut(string exePath)
        {
            string desktop = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
            string shortcutLocation = Path.Combine(desktop, "OGPSLauncher.lnk");

            WshShell shell = new WshShell();
            IWshShortcut shortcut = (IWshShortcut)shell.CreateShortcut(shortcutLocation);
            shortcut.Description = "OGPS Launcher";
            shortcut.TargetPath = exePath;
            shortcut.Save();
        }
    }

    public class LauncherConfig
    {
        public string gamePath { get; set; }
        public string launcherPath { get; set; }
        public string modsFolder { get; set; }
    }
}